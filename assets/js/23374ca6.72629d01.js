"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[278],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(6540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},9623:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"README","title":"Universal OID4VP","description":"Universal OID4VP OpenAPI Specification and Code Generators","source":"@site/docs/README.md","sourceDirName":".","slug":"/","permalink":"/universal-oid4vp/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Universal OID4VP","description":"Universal OID4VP OpenAPI Specification and Code Generators","hide_table_of_contents":true},"sidebar":"docs","previous":{"title":"Introduction","permalink":"/universal-oid4vp/docs/universal-oid4vp-introduction"},"next":{"title":"Implementation Examples","permalink":"/universal-oid4vp/docs/implementation-examples"}}');var t=i(4848),s=i(8453);const o={title:"Universal OID4VP",description:"Universal OID4VP OpenAPI Specification and Code Generators",hide_table_of_contents:!0},a="Universal OID4VP OpenAPI Specification and Code Generators",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Repository Structure",id:"repository-structure",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Generating Code",id:"generating-code",level:3},{value:"Customizing the OpenAPI Specification",id:"customizing-the-openapi-specification",level:3},{value:"How It Works",id:"how-it-works",level:2},{value:"Contribution",id:"contribution",level:2},{value:"Maintainers",id:"maintainers",level:2},{value:"License",id:"license",level:2},{value:"Acknowledgments",id:"acknowledgments",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"universal-oid4vp-openapi-specification-and-code-generators",children:"Universal OID4VP OpenAPI Specification and Code Generators"})}),"\n",(0,t.jsxs)(n.p,{children:["Welcome to the ",(0,t.jsx)(n.strong,{children:"Universal OID4VP API"})," repository, managed and created by the ",(0,t.jsx)(n.a,{href:"https://fides.community",children:"Fides Community"}),". This repository\ncontains the OpenAPI specification for the Universal ",(0,t.jsx)(n.strong,{children:"OID4VP API (OpenID for Verifiable Presentation)"})," and accompanying tools for generating code\nbased on this specification."]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Universal OID4VP API"})," provides a structured and comprehensive specification for integrating OpenID for Verifiable Presentations in your\napplications, where you do not rely on a single vendor providing the OID4VP Relying Party component. Using\nthis OpenAPI, developers can generate consistent, reusable, and extensible client/server code in a variety of programming languages, enabling seamless\nintegration and adherence to open identity standards."]}),"\n",(0,t.jsx)(n.p,{children:"Key highlights of this project include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["OpenAPI specification defined in ",(0,t.jsx)(n.code,{children:"openapi.yaml"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Code generators powered by ",(0,t.jsx)(n.a,{href:"https://openapi-generator.tech/",children:"OpenAPI Generator"}),", integrated with ",(0,t.jsx)(n.strong,{children:"Gradle"})," for automation."]}),"\n",(0,t.jsx)(n.li,{children:"Support for multiple programming languages during code generation."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"repository-structure",children:"Repository Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"openapi.yaml"}),": The core OpenAPI specification for Universal OID4VP."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"build.gradle"}),": Configuration for Gradle tasks used to generate code using OpenAPI Generator."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"build/generated"}),": Auto-generated code for client/server implementations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"docs"}),": Documentation generated from ",(0,t.jsx)(n.code,{children:"openapi.yaml"}),", detailing the available API operations, data structures, and workflows."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"To get started, make sure you have the following installed:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Java Development Kit (JDK)"}),": Version 11 or higher."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Gradle"}),": Version 7.x or above."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"generating-code",children:"Generating Code"}),"\n",(0,t.jsxs)(n.p,{children:["Code generation is automated using Gradle tasks defined in the build configuration. You can generate client or server code based on the OpenAPI\nspecification in ",(0,t.jsx)(n.code,{children:"openapi.yaml"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to generate code for a specified language:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./gradlew generate<LANGUAGE>Client\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"<LANGUAGE>"})," with your desired generation target (e.g., ",(0,t.jsx)(n.code,{children:"Java"}),", ",(0,t.jsx)(n.code,{children:"Python"}),", etc.)."]}),"\n",(0,t.jsx)(n.p,{children:"Example: To generate a Java client:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./gradlew generateJavaClient\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The generated code will be saved in the appropriate directory under ",(0,t.jsx)(n.code,{children:"build/generated"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"customizing-the-openapi-specification",children:"Customizing the OpenAPI Specification"}),"\n",(0,t.jsxs)(n.p,{children:["The primary source of truth for this repository is the ",(0,t.jsx)(n.code,{children:"openapi.yaml"})," file. You can edit this file to customize the API specification or add new\nendpoints. After making changes, re-generate the code to reflect the updated specification in your project."]}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsxs)(n.p,{children:["This project leverages the ",(0,t.jsx)(n.strong,{children:"OpenAPI Generator"})," tool, integrated with Gradle plugins, to automatically generate client and server code from a single\nsource of truth (",(0,t.jsx)(n.code,{children:"openapi.yaml"}),"). Here\u2019s how the process works:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OpenAPI Definition"}),": The ",(0,t.jsx)(n.code,{children:"openapi.yaml"})," contains the API definition, including all endpoints, paths, parameters, and object schemas."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code Generation"}),": Gradle tasks call OpenAPI Generator with the specified language templates to generate the code in the ",(0,t.jsx)(n.code,{children:"src/generated/"})," folder."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Development and Integration"}),": Use the generated code as a foundation to implement APIs or interact with the Universal OID4VP."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contribution",children:"Contribution"}),"\n",(0,t.jsx)(n.p,{children:"We welcome contributions from the community! If you\u2019d like to contribute to this project:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Fork the repository."}),"\n",(0,t.jsx)(n.li,{children:"Implement your changes."}),"\n",(0,t.jsx)(n.li,{children:"Submit a pull request for review."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Be sure to adhere to the contribution guidelines outlined in the ",(0,t.jsx)(n.a,{href:"./CONTRIBUTING.md",children:"CONTRIBUTING.md"})," file."]}),"\n",(0,t.jsx)(n.h2,{id:"maintainers",children:"Maintainers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Niels Klomp"})," - ",(0,t.jsx)(n.a,{href:"mailto:nklomp@4sure.tech",children:"Email"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Eelco Klaver"})," - ",(0,t.jsx)(n.a,{href:"mailto:eelco.klaver@credenco.com",children:"Email"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Harmen van der Kooij"})," - ",(0,t.jsx)(n.a,{href:"mailto:harmen@fides.community",children:"Email"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsxs)(n.p,{children:["This project is licensed under the Apache License 2.0. See the ",(0,t.jsx)(n.a,{href:"LICENSE.md",children:"LICENSE"})," file for details."]}),"\n",(0,t.jsx)(n.h2,{id:"acknowledgments",children:"Acknowledgments"}),"\n",(0,t.jsxs)(n.p,{children:["Built and maintained by the ",(0,t.jsx)(n.a,{href:"https://fides.community",children:"Fides Community"}),".",(0,t.jsx)(n.br,{}),"\n","We appreciate all contributors and users who help improve and grow this project!"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Fides Community"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"https://fides.community",children:"Learn more"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);